#version 330 // OpenGL version 3.3 (minimum requirement)

in vec3 vertices; // Value sent from application to this attribute
in vec3 normals;	// Normals for the vertices
in vec2 texCoords; // Input texture coordinates

uniform vec3 CameraPosition;
uniform mat4 World;
uniform mat4 WVP;

out vec3 retFragPos; // Output the position
out vec3 retNormal; // Output the normal
out vec2 retTexCoord; // Output the texture coordinates
out vec3 retViewDirection;

void main()
{
	gl_Position = WVP * vec4(vertices, 1.0); // Transform the model to screen projection
	retNormal = normalize(mat3(transpose(inverse(World))) * normals);
	retTexCoord = texCoords;
	retFragPos = vec3(World * vec4(vertices, 1.0f));
	retViewDirection = normalize(CameraPosition - retFragPos);
}